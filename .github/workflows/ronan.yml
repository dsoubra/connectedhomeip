# example workflow to control Arm Virtual Hardware

name: AVH_RPi4_Matter

# Controls when the workflow will run
on:
  workflow_dispatch:
  push:
    branches: [ main ]
#  pull_request:
#    branches: [ main ]

jobs:
#  build_lighting_app:
#    runs-on: self-hosted
#    steps:
#      - name: Navigate to install dir and pull latest
#        run: |
#          cd /home/pi/connectedhomeip/examples/lighting-app/linux
#          git pull
#          
#      - name: Rebuild lighting-app
#        run: |
#          cd /home/pi/connectedhomeip/examples/lighting-app/linux
#          pwd
#          gn gen out/debug
#          ninja -C out/debug

  run_lighting_app:
#    needs: build_lighting_app
    runs-on: self-hosted
    steps:
      - name: Run lighting-app for 1 minute
#        timeout-minutes: 1
        run: |
          cd /home/pi/connectedhomeip/examples/lighting-app/linux
          timeout 60s ./out/debug/chip-lighting-app || code=$?; if [[ $code -ne 124 && $code -ne 0 ]]; then exit $code; fi         
# https://stackoverflow.com/questions/63641822/run-command-with-timeout-in-github-workflow
